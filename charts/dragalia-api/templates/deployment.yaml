apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "dragalia-api.fullname" . }}
  labels:
    {{- include "dragalia-api.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "dragalia-api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "dragalia-api.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "dragalia-api.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          volumeMounts:
            - mountPath: "/app/logs"
              name: logs
            - mountPath: "/app/appsettings.{{ .Values.aspnet.environment }}.json"
              name: config
              subPath: "appsettings.json"
          livenessProbe:
            initialDelaySeconds: 60
            timeoutSeconds: 1
            httpGet:
              path: /ping
              port: http
          readinessProbe:
            timeoutSeconds: 5
            httpGet:
              path: /health
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: ASPNETCORE_ENVIRONMENT
              value: {{ .Values.aspnet.environment }}
            - name: ASPNETCORE_URLS
              value: http://+:80
            - name: POSTGRES_USER
              value: {{ .Values.postgresql.auth.username }}
            - name: POSTGRES_DB
              value: {{ .Values.postgresql.auth.database }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  # This secret is automatically created by the bitnami chart
                  name: {{ .Release.Name }}-postgresql
                  key: password
                  optional: false
            - name: DEVELOPER_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ include "dragalia-api.fullname" . }}-aspnet
                  key: developerToken
                  optional: false
            - name: PHOTON_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ include "dragalia-api.fullname" . }}-aspnet
                  key: photonToken
                  optional: false
            - name: ZENA_TOKEN                
              valueFrom: 
                secretKeyRef:
                  name: {{ include "dragalia-api.fullname" . }}-aspnet
                  key: zenaToken
                  optional: false
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: logs
          persistentVolumeClaim:
            claimName: {{ include "dragalia-api.fullname" . }}
        - name: config
          configMap:
            name: {{ include "dragalia-api.fullname" . }}
